# -*- coding: utf-8 -*-
"""Untitled24.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IHAMSDQPwH1vy4_w-mRgb696FsCwqXG5
"""

import os
import pandas as pd
from sentence_transformers import SentenceTransformer, util
import gradio as gr
import requests

SERPAPI_KEY = "461583492cfd960bc73685780ae1a239584b8b8e32275691394d5ff5237fd683"

model = SentenceTransformer("paraphrase-multilingual-mpnet-base-v2")

initial_data = [
    {"question": "پایتون چیست؟", "answer": "پایتون یک زبان برنامه‌نویسی سطح بالا و همه منظوره است."},
    {"question": "جاوا چه کاربردی دارد؟", "answer": "جاوا زبانی شیءگراست که در توسعه اپلیکیشن‌های موبایل و وب استفاده می‌شود."},
    {"question": "تفاوت لیست و تاپل در پایتون چیست؟", "answer": "لیست قابل تغییر است اما تاپل غیرقابل تغییر."},
    {"question": "SQL چیست؟", "answer": "SQL یک زبان برای مدیریت و پرس‌وجوی پایگاه داده‌های رابطه‌ای است."},
    {"question": "Git چیست؟", "answer": "Git یک سیستم کنترل نسخه توزیع شده است."},
    {"question": "Docker چه کاربردی دارد؟", "answer": "Docker ابزاری برای اجرای نرم‌افزارها در کانتینرهای ایزوله است."},
    {"question": "Django چیست؟", "answer": "Django یک فریم‌ورک وب قدرتمند پایتون است."},
    {"question": "Flask چیست؟", "answer": "Flask یک فریم‌ورک وب سبک در پایتون است."},
    {"question": "React چیست؟", "answer": "React یک کتابخانه جاوااسکریپت برای ساخت رابط کاربری است."},
    {"question": "Node.js چیست؟", "answer": "Node.js یک محیط اجرایی برای جاوااسکریپت در سمت سرور است."},
    {"question": "TensorFlow چیست؟", "answer": "TensorFlow یک کتابخانه متن‌باز برای یادگیری ماشین و هوش مصنوعی است."},
    {"question": "PyTorch چیست؟", "answer": "PyTorch یک کتابخانه یادگیری عمیق متن‌باز است."},
    {"question": "API چیست؟", "answer": "API رابطی است که برنامه‌ها می‌توانند از طریق آن با هم ارتباط برقرار کنند."},
    {"question": "REST API چیست؟", "answer": "REST API یک سبک معماری برای طراحی سرویس‌های وب است."},
    {"question": "GraphQL چیست؟", "answer": "GraphQL یک زبان پرس‌وجوی API است که توسط فیس‌بوک معرفی شد."},
    {"question": "OOP چیست؟", "answer": "OOP یا برنامه‌نویسی شیءگرا یک پارادایم برای سازماندهی کد است."},
    {"question": "Inheritance در OOP چیست؟", "answer": "Inheritance مکانیزمی است که یک کلاس می‌تواند ویژگی‌های کلاس دیگر را به ارث ببرد."},
    {"question": "Encapsulation چیست؟", "answer": "Encapsulation یعنی پنهان کردن داده‌ها و فراهم کردن دسترسی کنترل‌شده."},
    {"question": "Polymorphism چیست؟", "answer": "Polymorphism یعنی توانایی استفاده از یک تابع یا متد با شکل‌های مختلف."},
    {"question": "Abstraction چیست؟", "answer": "Abstraction یعنی پنهان کردن جزئیات و نمایش مفاهیم کلی."},
    {"question": "CSS چیست؟", "answer": "CSS برای استایل‌دهی صفحات وب استفاده می‌شود."},
    {"question": "HTML چیست؟", "answer": "HTML زبان نشانه‌گذاری استاندارد برای ساخت صفحات وب است."},
    {"question": "JavaScript چیست؟", "answer": "JavaScript زبانی برای برنامه‌نویسی سمت کاربر در وب است."},
    {"question": "TypeScript چیست؟", "answer": "TypeScript نسخه‌ای از جاوااسکریپت با تایپ ایستا است."},
    {"question": "Bootstrap چیست؟", "answer": "Bootstrap یک فریم‌ورک CSS برای طراحی واکنش‌گراست."},
    {"question": "Tailwind CSS چیست؟", "answer": "Tailwind یک فریم‌ورک CSS Utility-First است."},
    {"question": "MongoDB چیست؟", "answer": "MongoDB یک پایگاه داده NoSQL مبتنی بر سند است."},
    {"question": "PostgreSQL چیست؟", "answer": "PostgreSQL یک پایگاه داده رابطه‌ای قدرتمند و متن‌باز است."},
    {"question": "API Key چیست؟", "answer": "API Key یک شناسه منحصربه‌فرد برای دسترسی به API است."},
    {"question": "JWT چیست؟", "answer": "JWT یا JSON Web Token برای احراز هویت و انتقال امن داده‌ها استفاده می‌شود."},
    {"question": "MVC چیست؟", "answer": "MVC یک الگوی معماری است که برنامه را به سه بخش تقسیم می‌کند: مدل، ویو و کنترلر."},
    {"question": "Redux چیست؟", "answer": "Redux یک کتابخانه برای مدیریت حالت در اپلیکیشن‌های جاوااسکریپتی است."},
    {"question": "Next.js چیست؟", "answer": "Next.js یک فریم‌ورک برای React با قابلیت SSR است."},
    {"question": "Express.js چیست؟", "answer": "Express.js یک فریم‌ورک سبک برای Node.js است."},
    {"question": "ORM چیست؟", "answer": "ORM ابزاری برای ارتباط بین پایگاه داده و زبان برنامه‌نویسی شیءگرا است."},
    {"question": "Scrum چیست؟", "answer": "Scrum یک متدولوژی مدیریت پروژه چابک است."},
    {"question": "Agile چیست؟", "answer": "Agile یک متدولوژی توسعه نرم‌افزار با رویکرد تکرار شونده است."},
    {"question": "Unit Test چیست؟", "answer": "Unit Test تست کردن بخش‌های کوچک کد برای اطمینان از صحت عملکرد است."},
    {"question": "CI/CD چیست؟", "answer": "CI/CD به فرآیند یکپارچه‌سازی و تحویل پیوسته نرم‌افزار گفته می‌شود."},
    {"question": "Cloud Computing چیست؟", "answer": "Cloud Computing ارائه خدمات کامپیوتری از طریق اینترنت است."},
    {"question": "AWS چیست؟", "answer": "AWS سرویس‌های ابری شرکت آمازون است."},
    {"question": "Azure چیست؟", "answer": "Azure سرویس‌های ابری شرکت مایکروسافت است."},
    {"question": "Google Cloud چیست؟", "answer": "Google Cloud سرویس‌های ابری شرکت گوگل است."},
    {"question": "DevOps چیست؟", "answer": "DevOps ترکیبی از توسعه و عملیات برای بهبود فرآیند توسعه نرم‌افزار است."},
    {"question": "Virtualization چیست؟", "answer": "Virtualization فرآیند ایجاد نسخه مجازی از منابع سخت‌افزاری است."},
    {"question": "Kubernetes چیست؟", "answer": "Kubernetes یک سیستم متن‌باز برای مدیریت کانتینرهاست."},
    {"question": "Microservices چیست؟", "answer": "Microservices یک معماری است که نرم‌افزار را به سرویس‌های کوچک تقسیم می‌کند."},
    {"question": "API Rate Limit چیست؟", "answer": "Rate Limit محدودیتی برای تعداد درخواست‌های API در بازه زمانی مشخص است."},
    {"question": "Data Science چیست؟", "answer": "Data Science علمی برای استخراج دانش از داده‌هاست."},
]

def load_question_bank(filename="qa_bank.csv"):
    if os.path.exists(filename):
        return pd.read_csv(filename)
    else:
        df = pd.DataFrame(initial_data)
        df.to_csv(filename, index=False)
        return df

def save_to_csv(df, filename="qa_bank.csv"):
    df.to_csv(filename, index=False)

def search_on_serpapi_and_update_bank(query, df):
    url = f"https://serpapi.com/search.json?q={query}&hl=fa&gl=ir&api_key={SERPAPI_KEY}"
    response = requests.get(url)
    if response.status_code == 200:
        results = response.json().get("organic_results", [])
        if results:
            answer = results[0].get("snippet", "پاسخی یافت نشد.")
            new_entry = {"question": query, "answer": answer}
            df = df.append(new_entry, ignore_index=True)
            save_to_csv(df)
            return answer
    return "متاسفم، پاسخی پیدا نکردم."

def find_best_answer(user_question, df, threshold=0.8):
    embeddings = model.encode(df["question"].tolist(), convert_to_tensor=True)
    user_embedding = model.encode(user_question, convert_to_tensor=True)
    scores = util.cos_sim(user_embedding, embeddings)[0]
    best_score = scores.max().item()
    best_idx = scores.argmax().item()
    if best_score >= threshold:
        return df.iloc[best_idx]["answer"]
    else:
        return search_on_serpapi_and_update_bank(user_question, df)

def chatbot_interface(user_input, history=[]):
    df = load_question_bank()
    return find_best_answer(user_input, df)

demo = gr.ChatInterface(
    fn=chatbot_interface,
    title="🤖 چت‌بات برنامه‌نویسی هوشمند",
    description="هر سوالی در مورد برنامه‌نویسی داری از من بپرس!",
)

demo.launch(share=True)